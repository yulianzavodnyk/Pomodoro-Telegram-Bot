from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message

from database.data import add_user, get_language
from keyboards.keyboards import *

router = Router(name=__name__)


@router.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id
    await add_user(user_id)

    answer = {
        "eng": "Hi, I'm here to help you stay focused on your important tasks.\n"
               "/language to change language, if you want\n"
               "/help to see how bot work",
        "ukr": "–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç—É—Ç, —â–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –∑–æ—Å–µ—Ä–µ–¥–∏—Ç–∏—Å—è –Ω–∞ –≤–∞–∂–ª–∏–≤–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—è—Ö.\n"
               "/language —â–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É\n"
               "/help —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é—î –±–æ—Ç"
    }
    language = await get_language(user_id)
    await message.answer(answer[language], reply_markup=build_menu_markup())


@router.message(Command("help"))
async def bot_help(message: Message):
    answer = {
        "eng": "Send me number of minutes (from 5 to 120) to set the timer " 
               "or press one of the buttons below.\n"
               "/stop to stop timer\n"
               "/repeat to repeat the last timer\n\n"
               "Steps of Pomodoro Technique:\n"
               "1. Choose the task\n"
               "2. Start the timer\n"
               "3. Work on the task until the timer rings\n"
               "4. Take a short break (3-5 minutes)\n"
               "5. After four pomodoro, take a longer break (15-30 minutes)",
        "ukr": "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –∫—ñ–ª—å–∫—ñ—Å—å —Ö–≤–∏–ª–∏–Ω (–≤—ñ–¥ 5 –¥–æ 120) –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ "
               "–∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –æ–¥–Ω—É –∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂—á–µ.\n"
               "/stop —â–æ–± –∑—É–ø–∏–Ω–∏—Ç–∏ —Ç–∞–π–º–µ—Ä\n"
               "/repeat —â–æ–± –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–∞–π–º–µ—Ä\n\n"
               "–¢–µ—Ö–Ω—ñ–∫–∞ Pomodoro —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ 5 –∫—Ä–æ–∫—ñ–≤:\n"
               "1. –í–∏–±–µ—Ä—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è\n"
               "2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Ç–∞–π–º–µ—Ä\n"
               "3. –ü—Ä–∞—Ü—é–π—Ç–µ –Ω–∞–¥ –∑–∞–≤–¥–∞–Ω–Ω—è–º, –¥–æ–∫–∏ –Ω–µ –∑–∞–∫—ñ–Ω—á–∏—Ç—å—Å—è —Ç–∞–π–º–µ—Ä\n"
               "4. –ó—Ä–æ–±—ñ—Ç—å –∫–æ—Ä–æ—Ç–∫—É –ø–µ—Ä–µ—Ä–≤—É (3-5 —Ö–≤–∏–ª–∏–Ω)\n"
               "5. –ü—ñ—Å–ª—è —á–æ—Ç–∏—Ä—å–æ—Ö pomodoros –∑—Ä–æ–±—ñ—Ç—å –±—ñ–ª—å—à—É –ø–µ—Ä–µ—Ä–≤—É (15-30 —Ö–≤–∏–ª–∏–Ω)"
    }
    user_id = message.from_user.id
    language = await get_language(user_id)
    await message.answer(answer[language])


@router.message(Command("language"))
async def set_language(message: Message):
    answer = {
        "eng": "Choose your language üëá",
        "ukr": "–û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –º–æ–≤—Éüëá"
    }
    user_id = message.from_user.id
    language = await get_language(user_id)
    await message.answer(answer[language], reply_markup=build_language_markup())
